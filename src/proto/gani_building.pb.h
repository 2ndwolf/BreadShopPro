// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gani_building.proto

#ifndef PROTOBUF_gani_5fbuilding_2eproto__INCLUDED
#define PROTOBUF_gani_5fbuilding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_gani_5fbuilding_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsgani_building_sprite_defImpl();
void InitDefaultsgani_building_sprite_def();
void InitDefaultsgani_building_soundImpl();
void InitDefaultsgani_building_sound();
void InitDefaultsgani_building_ani_spriteImpl();
void InitDefaultsgani_building_ani_sprite();
void InitDefaultsgani_building_ani_dirImpl();
void InitDefaultsgani_building_ani_dir();
void InitDefaultsgani_building_ani_frameImpl();
void InitDefaultsgani_building_ani_frame();
void InitDefaultsgani_building_attached_spriteImpl();
void InitDefaultsgani_building_attached_sprite();
void InitDefaultsgani_building_gani_informationImpl();
void InitDefaultsgani_building_gani_information();
void InitDefaultsgani_buildingImpl();
void InitDefaultsgani_building();
inline void InitDefaults() {
  InitDefaultsgani_building_sprite_def();
  InitDefaultsgani_building_sound();
  InitDefaultsgani_building_ani_sprite();
  InitDefaultsgani_building_ani_dir();
  InitDefaultsgani_building_ani_frame();
  InitDefaultsgani_building_attached_sprite();
  InitDefaultsgani_building_gani_information();
  InitDefaultsgani_building();
}
}  // namespace protobuf_gani_5fbuilding_2eproto
class gani_building;
class gani_buildingDefaultTypeInternal;
extern gani_buildingDefaultTypeInternal _gani_building_default_instance_;
class gani_building_ani_dir;
class gani_building_ani_dirDefaultTypeInternal;
extern gani_building_ani_dirDefaultTypeInternal _gani_building_ani_dir_default_instance_;
class gani_building_ani_frame;
class gani_building_ani_frameDefaultTypeInternal;
extern gani_building_ani_frameDefaultTypeInternal _gani_building_ani_frame_default_instance_;
class gani_building_ani_sprite;
class gani_building_ani_spriteDefaultTypeInternal;
extern gani_building_ani_spriteDefaultTypeInternal _gani_building_ani_sprite_default_instance_;
class gani_building_attached_sprite;
class gani_building_attached_spriteDefaultTypeInternal;
extern gani_building_attached_spriteDefaultTypeInternal _gani_building_attached_sprite_default_instance_;
class gani_building_gani_information;
class gani_building_gani_informationDefaultTypeInternal;
extern gani_building_gani_informationDefaultTypeInternal _gani_building_gani_information_default_instance_;
class gani_building_sound;
class gani_building_soundDefaultTypeInternal;
extern gani_building_soundDefaultTypeInternal _gani_building_sound_default_instance_;
class gani_building_sprite_def;
class gani_building_sprite_defDefaultTypeInternal;
extern gani_building_sprite_defDefaultTypeInternal _gani_building_sprite_def_default_instance_;

enum gani_building_property {
  gani_building_property_CONTINUOUS = 0,
  gani_building_property_LOOP = 1,
  gani_building_property_SINGLEDIRECTION = 2
};
bool gani_building_property_IsValid(int value);
const gani_building_property gani_building_property_property_MIN = gani_building_property_CONTINUOUS;
const gani_building_property gani_building_property_property_MAX = gani_building_property_SINGLEDIRECTION;
const int gani_building_property_property_ARRAYSIZE = gani_building_property_property_MAX + 1;

const ::google::protobuf::EnumDescriptor* gani_building_property_descriptor();
inline const ::std::string& gani_building_property_Name(gani_building_property value) {
  return ::google::protobuf::internal::NameOfEnum(
    gani_building_property_descriptor(), value);
}
inline bool gani_building_property_Parse(
    const ::std::string& name, gani_building_property* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gani_building_property>(
    gani_building_property_descriptor(), name, value);
}
enum gani_building_default_image_type {
  gani_building_default_image_type_NOTDEFAULT = 0,
  gani_building_default_image_type_SPRITES = 1,
  gani_building_default_image_type_SHIELD = 2,
  gani_building_default_image_type_HEAD = 3,
  gani_building_default_image_type_BODY = 4,
  gani_building_default_image_type_SWORD = 5,
  gani_building_default_image_type_HORSE = 6,
  gani_building_default_image_type_PARAM1 = 7,
  gani_building_default_image_type_ATTR1 = 8,
  gani_building_default_image_type_PARAM2 = 9,
  gani_building_default_image_type_ATTR2 = 10,
  gani_building_default_image_type_PARAM3 = 11
};
bool gani_building_default_image_type_IsValid(int value);
const gani_building_default_image_type gani_building_default_image_type_default_image_type_MIN = gani_building_default_image_type_NOTDEFAULT;
const gani_building_default_image_type gani_building_default_image_type_default_image_type_MAX = gani_building_default_image_type_PARAM3;
const int gani_building_default_image_type_default_image_type_ARRAYSIZE = gani_building_default_image_type_default_image_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* gani_building_default_image_type_descriptor();
inline const ::std::string& gani_building_default_image_type_Name(gani_building_default_image_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    gani_building_default_image_type_descriptor(), value);
}
inline bool gani_building_default_image_type_Parse(
    const ::std::string& name, gani_building_default_image_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gani_building_default_image_type>(
    gani_building_default_image_type_descriptor(), name, value);
}
enum gani_building_directions {
  gani_building_directions_UP = 0,
  gani_building_directions_LEFT = 1,
  gani_building_directions_DOWN = 2
};
bool gani_building_directions_IsValid(int value);
const gani_building_directions gani_building_directions_directions_MIN = gani_building_directions_UP;
const gani_building_directions gani_building_directions_directions_MAX = gani_building_directions_DOWN;
const int gani_building_directions_directions_ARRAYSIZE = gani_building_directions_directions_MAX + 1;

const ::google::protobuf::EnumDescriptor* gani_building_directions_descriptor();
inline const ::std::string& gani_building_directions_Name(gani_building_directions value) {
  return ::google::protobuf::internal::NameOfEnum(
    gani_building_directions_descriptor(), value);
}
inline bool gani_building_directions_Parse(
    const ::std::string& name, gani_building_directions* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gani_building_directions>(
    gani_building_directions_descriptor(), name, value);
}
// ===================================================================

class gani_building_sprite_def : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.sprite_def) */ {
 public:
  gani_building_sprite_def();
  virtual ~gani_building_sprite_def();

  gani_building_sprite_def(const gani_building_sprite_def& from);

  inline gani_building_sprite_def& operator=(const gani_building_sprite_def& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_sprite_def(gani_building_sprite_def&& from) noexcept
    : gani_building_sprite_def() {
    *this = ::std::move(from);
  }

  inline gani_building_sprite_def& operator=(gani_building_sprite_def&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_sprite_def& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_sprite_def* internal_default_instance() {
    return reinterpret_cast<const gani_building_sprite_def*>(
               &_gani_building_sprite_def_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(gani_building_sprite_def* other);
  friend void swap(gani_building_sprite_def& a, gani_building_sprite_def& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_sprite_def* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_sprite_def* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_sprite_def& from);
  void MergeFrom(const gani_building_sprite_def& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_sprite_def* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string image = 2;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 2;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const char* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // optional string name = 7;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 7;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional int32 off_x = 3;
  bool has_off_x() const;
  void clear_off_x();
  static const int kOffXFieldNumber = 3;
  ::google::protobuf::int32 off_x() const;
  void set_off_x(::google::protobuf::int32 value);

  // optional int32 off_y = 4;
  bool has_off_y() const;
  void clear_off_y();
  static const int kOffYFieldNumber = 4;
  ::google::protobuf::int32 off_y() const;
  void set_off_y(::google::protobuf::int32 value);

  // optional int32 width = 5;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 6;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 6;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional .gani_building.default_image_type default_image = 8;
  bool has_default_image() const;
  void clear_default_image();
  static const int kDefaultImageFieldNumber = 8;
  ::gani_building_default_image_type default_image() const;
  void set_default_image(::gani_building_default_image_type value);

  // @@protoc_insertion_point(class_scope:gani_building.sprite_def)
 private:
  void set_has_index();
  void clear_has_index();
  void set_has_image();
  void clear_has_image();
  void set_has_off_x();
  void clear_has_off_x();
  void set_has_off_y();
  void clear_has_off_y();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_name();
  void clear_has_name();
  void set_has_default_image();
  void clear_has_default_image();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 off_x_;
  ::google::protobuf::int32 off_y_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  int default_image_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_sprite_defImpl();
};
// -------------------------------------------------------------------

class gani_building_sound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.sound) */ {
 public:
  gani_building_sound();
  virtual ~gani_building_sound();

  gani_building_sound(const gani_building_sound& from);

  inline gani_building_sound& operator=(const gani_building_sound& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_sound(gani_building_sound&& from) noexcept
    : gani_building_sound() {
    *this = ::std::move(from);
  }

  inline gani_building_sound& operator=(gani_building_sound&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_sound& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_sound* internal_default_instance() {
    return reinterpret_cast<const gani_building_sound*>(
               &_gani_building_sound_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(gani_building_sound* other);
  friend void swap(gani_building_sound& a, gani_building_sound& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_sound* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_sound* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_sound& from);
  void MergeFrom(const gani_building_sound& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_sound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_name = 1;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional sint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional sint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gani_building.sound)
 private:
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_soundImpl();
};
// -------------------------------------------------------------------

class gani_building_ani_sprite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.ani_sprite) */ {
 public:
  gani_building_ani_sprite();
  virtual ~gani_building_ani_sprite();

  gani_building_ani_sprite(const gani_building_ani_sprite& from);

  inline gani_building_ani_sprite& operator=(const gani_building_ani_sprite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_ani_sprite(gani_building_ani_sprite&& from) noexcept
    : gani_building_ani_sprite() {
    *this = ::std::move(from);
  }

  inline gani_building_ani_sprite& operator=(gani_building_ani_sprite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_ani_sprite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_ani_sprite* internal_default_instance() {
    return reinterpret_cast<const gani_building_ani_sprite*>(
               &_gani_building_ani_sprite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(gani_building_ani_sprite* other);
  friend void swap(gani_building_ani_sprite& a, gani_building_ani_sprite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_ani_sprite* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_ani_sprite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_ani_sprite& from);
  void MergeFrom(const gani_building_ani_sprite& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_ani_sprite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sprite_index = 1;
  bool has_sprite_index() const;
  void clear_sprite_index();
  static const int kSpriteIndexFieldNumber = 1;
  ::google::protobuf::uint32 sprite_index() const;
  void set_sprite_index(::google::protobuf::uint32 value);

  // optional sint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional sint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 layer = 4;
  bool has_layer() const;
  void clear_layer();
  static const int kLayerFieldNumber = 4;
  ::google::protobuf::int32 layer() const;
  void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gani_building.ani_sprite)
 private:
  void set_has_sprite_index();
  void clear_has_sprite_index();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_layer();
  void clear_has_layer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sprite_index_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 layer_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_ani_spriteImpl();
};
// -------------------------------------------------------------------

class gani_building_ani_dir : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.ani_dir) */ {
 public:
  gani_building_ani_dir();
  virtual ~gani_building_ani_dir();

  gani_building_ani_dir(const gani_building_ani_dir& from);

  inline gani_building_ani_dir& operator=(const gani_building_ani_dir& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_ani_dir(gani_building_ani_dir&& from) noexcept
    : gani_building_ani_dir() {
    *this = ::std::move(from);
  }

  inline gani_building_ani_dir& operator=(gani_building_ani_dir&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_ani_dir& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_ani_dir* internal_default_instance() {
    return reinterpret_cast<const gani_building_ani_dir*>(
               &_gani_building_ani_dir_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(gani_building_ani_dir* other);
  friend void swap(gani_building_ani_dir& a, gani_building_ani_dir& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_ani_dir* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_ani_dir* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_ani_dir& from);
  void MergeFrom(const gani_building_ani_dir& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_ani_dir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gani_building.ani_sprite ani_sprites = 2;
  int ani_sprites_size() const;
  void clear_ani_sprites();
  static const int kAniSpritesFieldNumber = 2;
  const ::gani_building_ani_sprite& ani_sprites(int index) const;
  ::gani_building_ani_sprite* mutable_ani_sprites(int index);
  ::gani_building_ani_sprite* add_ani_sprites();
  ::google::protobuf::RepeatedPtrField< ::gani_building_ani_sprite >*
      mutable_ani_sprites();
  const ::google::protobuf::RepeatedPtrField< ::gani_building_ani_sprite >&
      ani_sprites() const;

  // optional .gani_building.directions direction = 1;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 1;
  ::gani_building_directions direction() const;
  void set_direction(::gani_building_directions value);

  // @@protoc_insertion_point(class_scope:gani_building.ani_dir)
 private:
  void set_has_direction();
  void clear_has_direction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gani_building_ani_sprite > ani_sprites_;
  int direction_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_ani_dirImpl();
};
// -------------------------------------------------------------------

class gani_building_ani_frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.ani_frame) */ {
 public:
  gani_building_ani_frame();
  virtual ~gani_building_ani_frame();

  gani_building_ani_frame(const gani_building_ani_frame& from);

  inline gani_building_ani_frame& operator=(const gani_building_ani_frame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_ani_frame(gani_building_ani_frame&& from) noexcept
    : gani_building_ani_frame() {
    *this = ::std::move(from);
  }

  inline gani_building_ani_frame& operator=(gani_building_ani_frame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_ani_frame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_ani_frame* internal_default_instance() {
    return reinterpret_cast<const gani_building_ani_frame*>(
               &_gani_building_ani_frame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(gani_building_ani_frame* other);
  friend void swap(gani_building_ani_frame& a, gani_building_ani_frame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_ani_frame* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_ani_frame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_ani_frame& from);
  void MergeFrom(const gani_building_ani_frame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_ani_frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gani_building.ani_dir ani_dirs = 1;
  int ani_dirs_size() const;
  void clear_ani_dirs();
  static const int kAniDirsFieldNumber = 1;
  const ::gani_building_ani_dir& ani_dirs(int index) const;
  ::gani_building_ani_dir* mutable_ani_dirs(int index);
  ::gani_building_ani_dir* add_ani_dirs();
  ::google::protobuf::RepeatedPtrField< ::gani_building_ani_dir >*
      mutable_ani_dirs();
  const ::google::protobuf::RepeatedPtrField< ::gani_building_ani_dir >&
      ani_dirs() const;

  // repeated .gani_building.sound sounds = 3;
  int sounds_size() const;
  void clear_sounds();
  static const int kSoundsFieldNumber = 3;
  const ::gani_building_sound& sounds(int index) const;
  ::gani_building_sound* mutable_sounds(int index);
  ::gani_building_sound* add_sounds();
  ::google::protobuf::RepeatedPtrField< ::gani_building_sound >*
      mutable_sounds();
  const ::google::protobuf::RepeatedPtrField< ::gani_building_sound >&
      sounds() const;

  // optional int32 wait = 2;
  bool has_wait() const;
  void clear_wait();
  static const int kWaitFieldNumber = 2;
  ::google::protobuf::int32 wait() const;
  void set_wait(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gani_building.ani_frame)
 private:
  void set_has_wait();
  void clear_has_wait();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gani_building_ani_dir > ani_dirs_;
  ::google::protobuf::RepeatedPtrField< ::gani_building_sound > sounds_;
  ::google::protobuf::int32 wait_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_ani_frameImpl();
};
// -------------------------------------------------------------------

class gani_building_attached_sprite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.attached_sprite) */ {
 public:
  gani_building_attached_sprite();
  virtual ~gani_building_attached_sprite();

  gani_building_attached_sprite(const gani_building_attached_sprite& from);

  inline gani_building_attached_sprite& operator=(const gani_building_attached_sprite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_attached_sprite(gani_building_attached_sprite&& from) noexcept
    : gani_building_attached_sprite() {
    *this = ::std::move(from);
  }

  inline gani_building_attached_sprite& operator=(gani_building_attached_sprite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_attached_sprite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_attached_sprite* internal_default_instance() {
    return reinterpret_cast<const gani_building_attached_sprite*>(
               &_gani_building_attached_sprite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(gani_building_attached_sprite* other);
  friend void swap(gani_building_attached_sprite& a, gani_building_attached_sprite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_attached_sprite* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_attached_sprite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_attached_sprite& from);
  void MergeFrom(const gani_building_attached_sprite& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_attached_sprite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sprite_a = 1;
  bool has_sprite_a() const;
  void clear_sprite_a();
  static const int kSpriteAFieldNumber = 1;
  ::google::protobuf::uint32 sprite_a() const;
  void set_sprite_a(::google::protobuf::uint32 value);

  // optional uint32 sprite_b = 2;
  bool has_sprite_b() const;
  void clear_sprite_b();
  static const int kSpriteBFieldNumber = 2;
  ::google::protobuf::uint32 sprite_b() const;
  void set_sprite_b(::google::protobuf::uint32 value);

  // optional sint32 rel_x = 3;
  bool has_rel_x() const;
  void clear_rel_x();
  static const int kRelXFieldNumber = 3;
  ::google::protobuf::int32 rel_x() const;
  void set_rel_x(::google::protobuf::int32 value);

  // optional sint32 rel_y = 4;
  bool has_rel_y() const;
  void clear_rel_y();
  static const int kRelYFieldNumber = 4;
  ::google::protobuf::int32 rel_y() const;
  void set_rel_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gani_building.attached_sprite)
 private:
  void set_has_sprite_a();
  void clear_has_sprite_a();
  void set_has_sprite_b();
  void clear_has_sprite_b();
  void set_has_rel_x();
  void clear_has_rel_x();
  void set_has_rel_y();
  void clear_has_rel_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sprite_a_;
  ::google::protobuf::uint32 sprite_b_;
  ::google::protobuf::int32 rel_x_;
  ::google::protobuf::int32 rel_y_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_attached_spriteImpl();
};
// -------------------------------------------------------------------

class gani_building_gani_information : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building.gani_information) */ {
 public:
  gani_building_gani_information();
  virtual ~gani_building_gani_information();

  gani_building_gani_information(const gani_building_gani_information& from);

  inline gani_building_gani_information& operator=(const gani_building_gani_information& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building_gani_information(gani_building_gani_information&& from) noexcept
    : gani_building_gani_information() {
    *this = ::std::move(from);
  }

  inline gani_building_gani_information& operator=(gani_building_gani_information&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building_gani_information& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building_gani_information* internal_default_instance() {
    return reinterpret_cast<const gani_building_gani_information*>(
               &_gani_building_gani_information_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(gani_building_gani_information* other);
  friend void swap(gani_building_gani_information& a, gani_building_gani_information& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building_gani_information* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building_gani_information* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building_gani_information& from);
  void MergeFrom(const gani_building_gani_information& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building_gani_information* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gani_building.sprite_def sprite_defs = 1;
  int sprite_defs_size() const;
  void clear_sprite_defs();
  static const int kSpriteDefsFieldNumber = 1;
  const ::gani_building_sprite_def& sprite_defs(int index) const;
  ::gani_building_sprite_def* mutable_sprite_defs(int index);
  ::gani_building_sprite_def* add_sprite_defs();
  ::google::protobuf::RepeatedPtrField< ::gani_building_sprite_def >*
      mutable_sprite_defs();
  const ::google::protobuf::RepeatedPtrField< ::gani_building_sprite_def >&
      sprite_defs() const;

  // repeated .gani_building.ani_frame ani_frames = 2;
  int ani_frames_size() const;
  void clear_ani_frames();
  static const int kAniFramesFieldNumber = 2;
  const ::gani_building_ani_frame& ani_frames(int index) const;
  ::gani_building_ani_frame* mutable_ani_frames(int index);
  ::gani_building_ani_frame* add_ani_frames();
  ::google::protobuf::RepeatedPtrField< ::gani_building_ani_frame >*
      mutable_ani_frames();
  const ::google::protobuf::RepeatedPtrField< ::gani_building_ani_frame >&
      ani_frames() const;

  // repeated .gani_building.property properties = 3;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 3;
  ::gani_building_property properties(int index) const;
  void set_properties(int index, ::gani_building_property value);
  void add_properties(::gani_building_property value);
  const ::google::protobuf::RepeatedField<int>& properties() const;
  ::google::protobuf::RepeatedField<int>* mutable_properties();

  // repeated .gani_building.attached_sprite attached_sprites = 4;
  int attached_sprites_size() const;
  void clear_attached_sprites();
  static const int kAttachedSpritesFieldNumber = 4;
  const ::gani_building_attached_sprite& attached_sprites(int index) const;
  ::gani_building_attached_sprite* mutable_attached_sprites(int index);
  ::gani_building_attached_sprite* add_attached_sprites();
  ::google::protobuf::RepeatedPtrField< ::gani_building_attached_sprite >*
      mutable_attached_sprites();
  const ::google::protobuf::RepeatedPtrField< ::gani_building_attached_sprite >&
      attached_sprites() const;

  // repeated string default_attributes = 5;
  int default_attributes_size() const;
  void clear_default_attributes();
  static const int kDefaultAttributesFieldNumber = 5;
  const ::std::string& default_attributes(int index) const;
  ::std::string* mutable_default_attributes(int index);
  void set_default_attributes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_default_attributes(int index, ::std::string&& value);
  #endif
  void set_default_attributes(int index, const char* value);
  void set_default_attributes(int index, const char* value, size_t size);
  ::std::string* add_default_attributes();
  void add_default_attributes(const ::std::string& value);
  #if LANG_CXX11
  void add_default_attributes(::std::string&& value);
  #endif
  void add_default_attributes(const char* value);
  void add_default_attributes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& default_attributes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_default_attributes();

  // repeated string default_parameters = 6;
  int default_parameters_size() const;
  void clear_default_parameters();
  static const int kDefaultParametersFieldNumber = 6;
  const ::std::string& default_parameters(int index) const;
  ::std::string* mutable_default_parameters(int index);
  void set_default_parameters(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_default_parameters(int index, ::std::string&& value);
  #endif
  void set_default_parameters(int index, const char* value);
  void set_default_parameters(int index, const char* value, size_t size);
  ::std::string* add_default_parameters();
  void add_default_parameters(const ::std::string& value);
  #if LANG_CXX11
  void add_default_parameters(::std::string&& value);
  #endif
  void add_default_parameters(const char* value);
  void add_default_parameters(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& default_parameters() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_default_parameters();

  // optional string default_head = 7;
  bool has_default_head() const;
  void clear_default_head();
  static const int kDefaultHeadFieldNumber = 7;
  const ::std::string& default_head() const;
  void set_default_head(const ::std::string& value);
  #if LANG_CXX11
  void set_default_head(::std::string&& value);
  #endif
  void set_default_head(const char* value);
  void set_default_head(const char* value, size_t size);
  ::std::string* mutable_default_head();
  ::std::string* release_default_head();
  void set_allocated_default_head(::std::string* default_head);

  // optional string default_body = 8;
  bool has_default_body() const;
  void clear_default_body();
  static const int kDefaultBodyFieldNumber = 8;
  const ::std::string& default_body() const;
  void set_default_body(const ::std::string& value);
  #if LANG_CXX11
  void set_default_body(::std::string&& value);
  #endif
  void set_default_body(const char* value);
  void set_default_body(const char* value, size_t size);
  ::std::string* mutable_default_body();
  ::std::string* release_default_body();
  void set_allocated_default_body(::std::string* default_body);

  // optional string next_gani = 9;
  bool has_next_gani() const;
  void clear_next_gani();
  static const int kNextGaniFieldNumber = 9;
  const ::std::string& next_gani() const;
  void set_next_gani(const ::std::string& value);
  #if LANG_CXX11
  void set_next_gani(::std::string&& value);
  #endif
  void set_next_gani(const char* value);
  void set_next_gani(const char* value, size_t size);
  ::std::string* mutable_next_gani();
  ::std::string* release_next_gani();
  void set_allocated_next_gani(::std::string* next_gani);

  // @@protoc_insertion_point(class_scope:gani_building.gani_information)
 private:
  void set_has_default_head();
  void clear_has_default_head();
  void set_has_default_body();
  void clear_has_default_body();
  void set_has_next_gani();
  void clear_has_next_gani();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gani_building_sprite_def > sprite_defs_;
  ::google::protobuf::RepeatedPtrField< ::gani_building_ani_frame > ani_frames_;
  ::google::protobuf::RepeatedField<int> properties_;
  ::google::protobuf::RepeatedPtrField< ::gani_building_attached_sprite > attached_sprites_;
  ::google::protobuf::RepeatedPtrField< ::std::string> default_attributes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> default_parameters_;
  ::google::protobuf::internal::ArenaStringPtr default_head_;
  ::google::protobuf::internal::ArenaStringPtr default_body_;
  ::google::protobuf::internal::ArenaStringPtr next_gani_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_building_gani_informationImpl();
};
// -------------------------------------------------------------------

class gani_building : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gani_building) */ {
 public:
  gani_building();
  virtual ~gani_building();

  gani_building(const gani_building& from);

  inline gani_building& operator=(const gani_building& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gani_building(gani_building&& from) noexcept
    : gani_building() {
    *this = ::std::move(from);
  }

  inline gani_building& operator=(gani_building&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gani_building& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gani_building* internal_default_instance() {
    return reinterpret_cast<const gani_building*>(
               &_gani_building_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(gani_building* other);
  friend void swap(gani_building& a, gani_building& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gani_building* New() const PROTOBUF_FINAL { return New(NULL); }

  gani_building* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gani_building& from);
  void MergeFrom(const gani_building& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gani_building* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef gani_building_sprite_def sprite_def;
  typedef gani_building_sound sound;
  typedef gani_building_ani_sprite ani_sprite;
  typedef gani_building_ani_dir ani_dir;
  typedef gani_building_ani_frame ani_frame;
  typedef gani_building_attached_sprite attached_sprite;
  typedef gani_building_gani_information gani_information;

  typedef gani_building_property property;
  static const property CONTINUOUS =
    gani_building_property_CONTINUOUS;
  static const property LOOP =
    gani_building_property_LOOP;
  static const property SINGLEDIRECTION =
    gani_building_property_SINGLEDIRECTION;
  static inline bool property_IsValid(int value) {
    return gani_building_property_IsValid(value);
  }
  static const property property_MIN =
    gani_building_property_property_MIN;
  static const property property_MAX =
    gani_building_property_property_MAX;
  static const int property_ARRAYSIZE =
    gani_building_property_property_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  property_descriptor() {
    return gani_building_property_descriptor();
  }
  static inline const ::std::string& property_Name(property value) {
    return gani_building_property_Name(value);
  }
  static inline bool property_Parse(const ::std::string& name,
      property* value) {
    return gani_building_property_Parse(name, value);
  }

  typedef gani_building_default_image_type default_image_type;
  static const default_image_type NOTDEFAULT =
    gani_building_default_image_type_NOTDEFAULT;
  static const default_image_type SPRITES =
    gani_building_default_image_type_SPRITES;
  static const default_image_type SHIELD =
    gani_building_default_image_type_SHIELD;
  static const default_image_type HEAD =
    gani_building_default_image_type_HEAD;
  static const default_image_type BODY =
    gani_building_default_image_type_BODY;
  static const default_image_type SWORD =
    gani_building_default_image_type_SWORD;
  static const default_image_type HORSE =
    gani_building_default_image_type_HORSE;
  static const default_image_type PARAM1 =
    gani_building_default_image_type_PARAM1;
  static const default_image_type ATTR1 =
    gani_building_default_image_type_ATTR1;
  static const default_image_type PARAM2 =
    gani_building_default_image_type_PARAM2;
  static const default_image_type ATTR2 =
    gani_building_default_image_type_ATTR2;
  static const default_image_type PARAM3 =
    gani_building_default_image_type_PARAM3;
  static inline bool default_image_type_IsValid(int value) {
    return gani_building_default_image_type_IsValid(value);
  }
  static const default_image_type default_image_type_MIN =
    gani_building_default_image_type_default_image_type_MIN;
  static const default_image_type default_image_type_MAX =
    gani_building_default_image_type_default_image_type_MAX;
  static const int default_image_type_ARRAYSIZE =
    gani_building_default_image_type_default_image_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  default_image_type_descriptor() {
    return gani_building_default_image_type_descriptor();
  }
  static inline const ::std::string& default_image_type_Name(default_image_type value) {
    return gani_building_default_image_type_Name(value);
  }
  static inline bool default_image_type_Parse(const ::std::string& name,
      default_image_type* value) {
    return gani_building_default_image_type_Parse(name, value);
  }

  typedef gani_building_directions directions;
  static const directions UP =
    gani_building_directions_UP;
  static const directions LEFT =
    gani_building_directions_LEFT;
  static const directions DOWN =
    gani_building_directions_DOWN;
  static inline bool directions_IsValid(int value) {
    return gani_building_directions_IsValid(value);
  }
  static const directions directions_MIN =
    gani_building_directions_directions_MIN;
  static const directions directions_MAX =
    gani_building_directions_directions_MAX;
  static const int directions_ARRAYSIZE =
    gani_building_directions_directions_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  directions_descriptor() {
    return gani_building_directions_descriptor();
  }
  static inline const ::std::string& directions_Name(directions value) {
    return gani_building_directions_Name(value);
  }
  static inline bool directions_Parse(const ::std::string& name,
      directions* value) {
    return gani_building_directions_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gani_building)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_gani_5fbuilding_2eproto::TableStruct;
  friend void ::protobuf_gani_5fbuilding_2eproto::InitDefaultsgani_buildingImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// gani_building_sprite_def

// optional uint32 index = 1;
inline bool gani_building_sprite_def::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gani_building_sprite_def::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gani_building_sprite_def::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gani_building_sprite_def::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 gani_building_sprite_def::index() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.index)
  return index_;
}
inline void gani_building_sprite_def::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.index)
}

// optional string image = 2;
inline bool gani_building_sprite_def::has_image() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_sprite_def::set_has_image() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_sprite_def::clear_has_image() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_sprite_def::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image();
}
inline const ::std::string& gani_building_sprite_def::image() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.image)
  return image_.GetNoArena();
}
inline void gani_building_sprite_def::set_image(const ::std::string& value) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.image)
}
#if LANG_CXX11
inline void gani_building_sprite_def::set_image(::std::string&& value) {
  set_has_image();
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gani_building.sprite_def.image)
}
#endif
inline void gani_building_sprite_def::set_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gani_building.sprite_def.image)
}
inline void gani_building_sprite_def::set_image(const char* value, size_t size) {
  set_has_image();
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gani_building.sprite_def.image)
}
inline ::std::string* gani_building_sprite_def::mutable_image() {
  set_has_image();
  // @@protoc_insertion_point(field_mutable:gani_building.sprite_def.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gani_building_sprite_def::release_image() {
  // @@protoc_insertion_point(field_release:gani_building.sprite_def.image)
  clear_has_image();
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gani_building_sprite_def::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    set_has_image();
  } else {
    clear_has_image();
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:gani_building.sprite_def.image)
}

// optional int32 off_x = 3;
inline bool gani_building_sprite_def::has_off_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gani_building_sprite_def::set_has_off_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gani_building_sprite_def::clear_has_off_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gani_building_sprite_def::clear_off_x() {
  off_x_ = 0;
  clear_has_off_x();
}
inline ::google::protobuf::int32 gani_building_sprite_def::off_x() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.off_x)
  return off_x_;
}
inline void gani_building_sprite_def::set_off_x(::google::protobuf::int32 value) {
  set_has_off_x();
  off_x_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.off_x)
}

// optional int32 off_y = 4;
inline bool gani_building_sprite_def::has_off_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gani_building_sprite_def::set_has_off_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gani_building_sprite_def::clear_has_off_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gani_building_sprite_def::clear_off_y() {
  off_y_ = 0;
  clear_has_off_y();
}
inline ::google::protobuf::int32 gani_building_sprite_def::off_y() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.off_y)
  return off_y_;
}
inline void gani_building_sprite_def::set_off_y(::google::protobuf::int32 value) {
  set_has_off_y();
  off_y_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.off_y)
}

// optional int32 width = 5;
inline bool gani_building_sprite_def::has_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gani_building_sprite_def::set_has_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gani_building_sprite_def::clear_has_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gani_building_sprite_def::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 gani_building_sprite_def::width() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.width)
  return width_;
}
inline void gani_building_sprite_def::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.width)
}

// optional int32 height = 6;
inline bool gani_building_sprite_def::has_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gani_building_sprite_def::set_has_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gani_building_sprite_def::clear_has_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gani_building_sprite_def::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 gani_building_sprite_def::height() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.height)
  return height_;
}
inline void gani_building_sprite_def::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.height)
}

// optional string name = 7;
inline bool gani_building_sprite_def::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gani_building_sprite_def::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gani_building_sprite_def::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gani_building_sprite_def::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& gani_building_sprite_def::name() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.name)
  return name_.GetNoArena();
}
inline void gani_building_sprite_def::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.name)
}
#if LANG_CXX11
inline void gani_building_sprite_def::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gani_building.sprite_def.name)
}
#endif
inline void gani_building_sprite_def::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gani_building.sprite_def.name)
}
inline void gani_building_sprite_def::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gani_building.sprite_def.name)
}
inline ::std::string* gani_building_sprite_def::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:gani_building.sprite_def.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gani_building_sprite_def::release_name() {
  // @@protoc_insertion_point(field_release:gani_building.sprite_def.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gani_building_sprite_def::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gani_building.sprite_def.name)
}

// optional .gani_building.default_image_type default_image = 8;
inline bool gani_building_sprite_def::has_default_image() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gani_building_sprite_def::set_has_default_image() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gani_building_sprite_def::clear_has_default_image() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gani_building_sprite_def::clear_default_image() {
  default_image_ = 0;
  clear_has_default_image();
}
inline ::gani_building_default_image_type gani_building_sprite_def::default_image() const {
  // @@protoc_insertion_point(field_get:gani_building.sprite_def.default_image)
  return static_cast< ::gani_building_default_image_type >(default_image_);
}
inline void gani_building_sprite_def::set_default_image(::gani_building_default_image_type value) {
  assert(::gani_building_default_image_type_IsValid(value));
  set_has_default_image();
  default_image_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sprite_def.default_image)
}

// -------------------------------------------------------------------

// gani_building_sound

// optional string file_name = 1;
inline bool gani_building_sound::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_sound::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_sound::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_sound::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& gani_building_sound::file_name() const {
  // @@protoc_insertion_point(field_get:gani_building.sound.file_name)
  return file_name_.GetNoArena();
}
inline void gani_building_sound::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gani_building.sound.file_name)
}
#if LANG_CXX11
inline void gani_building_sound::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gani_building.sound.file_name)
}
#endif
inline void gani_building_sound::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gani_building.sound.file_name)
}
inline void gani_building_sound::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gani_building.sound.file_name)
}
inline ::std::string* gani_building_sound::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:gani_building.sound.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gani_building_sound::release_file_name() {
  // @@protoc_insertion_point(field_release:gani_building.sound.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gani_building_sound::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:gani_building.sound.file_name)
}

// optional sint32 x = 2;
inline bool gani_building_sound::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gani_building_sound::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gani_building_sound::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gani_building_sound::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 gani_building_sound::x() const {
  // @@protoc_insertion_point(field_get:gani_building.sound.x)
  return x_;
}
inline void gani_building_sound::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sound.x)
}

// optional sint32 y = 3;
inline bool gani_building_sound::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gani_building_sound::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gani_building_sound::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gani_building_sound::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 gani_building_sound::y() const {
  // @@protoc_insertion_point(field_get:gani_building.sound.y)
  return y_;
}
inline void gani_building_sound::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:gani_building.sound.y)
}

// -------------------------------------------------------------------

// gani_building_ani_sprite

// optional uint32 sprite_index = 1;
inline bool gani_building_ani_sprite::has_sprite_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_ani_sprite::set_has_sprite_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_ani_sprite::clear_has_sprite_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_ani_sprite::clear_sprite_index() {
  sprite_index_ = 0u;
  clear_has_sprite_index();
}
inline ::google::protobuf::uint32 gani_building_ani_sprite::sprite_index() const {
  // @@protoc_insertion_point(field_get:gani_building.ani_sprite.sprite_index)
  return sprite_index_;
}
inline void gani_building_ani_sprite::set_sprite_index(::google::protobuf::uint32 value) {
  set_has_sprite_index();
  sprite_index_ = value;
  // @@protoc_insertion_point(field_set:gani_building.ani_sprite.sprite_index)
}

// optional sint32 x = 2;
inline bool gani_building_ani_sprite::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gani_building_ani_sprite::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gani_building_ani_sprite::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gani_building_ani_sprite::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 gani_building_ani_sprite::x() const {
  // @@protoc_insertion_point(field_get:gani_building.ani_sprite.x)
  return x_;
}
inline void gani_building_ani_sprite::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:gani_building.ani_sprite.x)
}

// optional sint32 y = 3;
inline bool gani_building_ani_sprite::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gani_building_ani_sprite::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gani_building_ani_sprite::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gani_building_ani_sprite::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 gani_building_ani_sprite::y() const {
  // @@protoc_insertion_point(field_get:gani_building.ani_sprite.y)
  return y_;
}
inline void gani_building_ani_sprite::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:gani_building.ani_sprite.y)
}

// optional int32 layer = 4;
inline bool gani_building_ani_sprite::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gani_building_ani_sprite::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gani_building_ani_sprite::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gani_building_ani_sprite::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 gani_building_ani_sprite::layer() const {
  // @@protoc_insertion_point(field_get:gani_building.ani_sprite.layer)
  return layer_;
}
inline void gani_building_ani_sprite::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
  // @@protoc_insertion_point(field_set:gani_building.ani_sprite.layer)
}

// -------------------------------------------------------------------

// gani_building_ani_dir

// optional .gani_building.directions direction = 1;
inline bool gani_building_ani_dir::has_direction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_ani_dir::set_has_direction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_ani_dir::clear_has_direction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_ani_dir::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::gani_building_directions gani_building_ani_dir::direction() const {
  // @@protoc_insertion_point(field_get:gani_building.ani_dir.direction)
  return static_cast< ::gani_building_directions >(direction_);
}
inline void gani_building_ani_dir::set_direction(::gani_building_directions value) {
  assert(::gani_building_directions_IsValid(value));
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:gani_building.ani_dir.direction)
}

// repeated .gani_building.ani_sprite ani_sprites = 2;
inline int gani_building_ani_dir::ani_sprites_size() const {
  return ani_sprites_.size();
}
inline void gani_building_ani_dir::clear_ani_sprites() {
  ani_sprites_.Clear();
}
inline const ::gani_building_ani_sprite& gani_building_ani_dir::ani_sprites(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.ani_dir.ani_sprites)
  return ani_sprites_.Get(index);
}
inline ::gani_building_ani_sprite* gani_building_ani_dir::mutable_ani_sprites(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.ani_dir.ani_sprites)
  return ani_sprites_.Mutable(index);
}
inline ::gani_building_ani_sprite* gani_building_ani_dir::add_ani_sprites() {
  // @@protoc_insertion_point(field_add:gani_building.ani_dir.ani_sprites)
  return ani_sprites_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gani_building_ani_sprite >*
gani_building_ani_dir::mutable_ani_sprites() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.ani_dir.ani_sprites)
  return &ani_sprites_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gani_building_ani_sprite >&
gani_building_ani_dir::ani_sprites() const {
  // @@protoc_insertion_point(field_list:gani_building.ani_dir.ani_sprites)
  return ani_sprites_;
}

// -------------------------------------------------------------------

// gani_building_ani_frame

// repeated .gani_building.ani_dir ani_dirs = 1;
inline int gani_building_ani_frame::ani_dirs_size() const {
  return ani_dirs_.size();
}
inline void gani_building_ani_frame::clear_ani_dirs() {
  ani_dirs_.Clear();
}
inline const ::gani_building_ani_dir& gani_building_ani_frame::ani_dirs(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.ani_frame.ani_dirs)
  return ani_dirs_.Get(index);
}
inline ::gani_building_ani_dir* gani_building_ani_frame::mutable_ani_dirs(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.ani_frame.ani_dirs)
  return ani_dirs_.Mutable(index);
}
inline ::gani_building_ani_dir* gani_building_ani_frame::add_ani_dirs() {
  // @@protoc_insertion_point(field_add:gani_building.ani_frame.ani_dirs)
  return ani_dirs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gani_building_ani_dir >*
gani_building_ani_frame::mutable_ani_dirs() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.ani_frame.ani_dirs)
  return &ani_dirs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gani_building_ani_dir >&
gani_building_ani_frame::ani_dirs() const {
  // @@protoc_insertion_point(field_list:gani_building.ani_frame.ani_dirs)
  return ani_dirs_;
}

// optional int32 wait = 2;
inline bool gani_building_ani_frame::has_wait() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_ani_frame::set_has_wait() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_ani_frame::clear_has_wait() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_ani_frame::clear_wait() {
  wait_ = 0;
  clear_has_wait();
}
inline ::google::protobuf::int32 gani_building_ani_frame::wait() const {
  // @@protoc_insertion_point(field_get:gani_building.ani_frame.wait)
  return wait_;
}
inline void gani_building_ani_frame::set_wait(::google::protobuf::int32 value) {
  set_has_wait();
  wait_ = value;
  // @@protoc_insertion_point(field_set:gani_building.ani_frame.wait)
}

// repeated .gani_building.sound sounds = 3;
inline int gani_building_ani_frame::sounds_size() const {
  return sounds_.size();
}
inline void gani_building_ani_frame::clear_sounds() {
  sounds_.Clear();
}
inline const ::gani_building_sound& gani_building_ani_frame::sounds(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.ani_frame.sounds)
  return sounds_.Get(index);
}
inline ::gani_building_sound* gani_building_ani_frame::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.ani_frame.sounds)
  return sounds_.Mutable(index);
}
inline ::gani_building_sound* gani_building_ani_frame::add_sounds() {
  // @@protoc_insertion_point(field_add:gani_building.ani_frame.sounds)
  return sounds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gani_building_sound >*
gani_building_ani_frame::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.ani_frame.sounds)
  return &sounds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gani_building_sound >&
gani_building_ani_frame::sounds() const {
  // @@protoc_insertion_point(field_list:gani_building.ani_frame.sounds)
  return sounds_;
}

// -------------------------------------------------------------------

// gani_building_attached_sprite

// optional uint32 sprite_a = 1;
inline bool gani_building_attached_sprite::has_sprite_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_attached_sprite::set_has_sprite_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_attached_sprite::clear_has_sprite_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_attached_sprite::clear_sprite_a() {
  sprite_a_ = 0u;
  clear_has_sprite_a();
}
inline ::google::protobuf::uint32 gani_building_attached_sprite::sprite_a() const {
  // @@protoc_insertion_point(field_get:gani_building.attached_sprite.sprite_a)
  return sprite_a_;
}
inline void gani_building_attached_sprite::set_sprite_a(::google::protobuf::uint32 value) {
  set_has_sprite_a();
  sprite_a_ = value;
  // @@protoc_insertion_point(field_set:gani_building.attached_sprite.sprite_a)
}

// optional uint32 sprite_b = 2;
inline bool gani_building_attached_sprite::has_sprite_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gani_building_attached_sprite::set_has_sprite_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gani_building_attached_sprite::clear_has_sprite_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gani_building_attached_sprite::clear_sprite_b() {
  sprite_b_ = 0u;
  clear_has_sprite_b();
}
inline ::google::protobuf::uint32 gani_building_attached_sprite::sprite_b() const {
  // @@protoc_insertion_point(field_get:gani_building.attached_sprite.sprite_b)
  return sprite_b_;
}
inline void gani_building_attached_sprite::set_sprite_b(::google::protobuf::uint32 value) {
  set_has_sprite_b();
  sprite_b_ = value;
  // @@protoc_insertion_point(field_set:gani_building.attached_sprite.sprite_b)
}

// optional sint32 rel_x = 3;
inline bool gani_building_attached_sprite::has_rel_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gani_building_attached_sprite::set_has_rel_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gani_building_attached_sprite::clear_has_rel_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gani_building_attached_sprite::clear_rel_x() {
  rel_x_ = 0;
  clear_has_rel_x();
}
inline ::google::protobuf::int32 gani_building_attached_sprite::rel_x() const {
  // @@protoc_insertion_point(field_get:gani_building.attached_sprite.rel_x)
  return rel_x_;
}
inline void gani_building_attached_sprite::set_rel_x(::google::protobuf::int32 value) {
  set_has_rel_x();
  rel_x_ = value;
  // @@protoc_insertion_point(field_set:gani_building.attached_sprite.rel_x)
}

// optional sint32 rel_y = 4;
inline bool gani_building_attached_sprite::has_rel_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gani_building_attached_sprite::set_has_rel_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gani_building_attached_sprite::clear_has_rel_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gani_building_attached_sprite::clear_rel_y() {
  rel_y_ = 0;
  clear_has_rel_y();
}
inline ::google::protobuf::int32 gani_building_attached_sprite::rel_y() const {
  // @@protoc_insertion_point(field_get:gani_building.attached_sprite.rel_y)
  return rel_y_;
}
inline void gani_building_attached_sprite::set_rel_y(::google::protobuf::int32 value) {
  set_has_rel_y();
  rel_y_ = value;
  // @@protoc_insertion_point(field_set:gani_building.attached_sprite.rel_y)
}

// -------------------------------------------------------------------

// gani_building_gani_information

// repeated .gani_building.sprite_def sprite_defs = 1;
inline int gani_building_gani_information::sprite_defs_size() const {
  return sprite_defs_.size();
}
inline void gani_building_gani_information::clear_sprite_defs() {
  sprite_defs_.Clear();
}
inline const ::gani_building_sprite_def& gani_building_gani_information::sprite_defs(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.sprite_defs)
  return sprite_defs_.Get(index);
}
inline ::gani_building_sprite_def* gani_building_gani_information::mutable_sprite_defs(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.sprite_defs)
  return sprite_defs_.Mutable(index);
}
inline ::gani_building_sprite_def* gani_building_gani_information::add_sprite_defs() {
  // @@protoc_insertion_point(field_add:gani_building.gani_information.sprite_defs)
  return sprite_defs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gani_building_sprite_def >*
gani_building_gani_information::mutable_sprite_defs() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.gani_information.sprite_defs)
  return &sprite_defs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gani_building_sprite_def >&
gani_building_gani_information::sprite_defs() const {
  // @@protoc_insertion_point(field_list:gani_building.gani_information.sprite_defs)
  return sprite_defs_;
}

// repeated .gani_building.ani_frame ani_frames = 2;
inline int gani_building_gani_information::ani_frames_size() const {
  return ani_frames_.size();
}
inline void gani_building_gani_information::clear_ani_frames() {
  ani_frames_.Clear();
}
inline const ::gani_building_ani_frame& gani_building_gani_information::ani_frames(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.ani_frames)
  return ani_frames_.Get(index);
}
inline ::gani_building_ani_frame* gani_building_gani_information::mutable_ani_frames(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.ani_frames)
  return ani_frames_.Mutable(index);
}
inline ::gani_building_ani_frame* gani_building_gani_information::add_ani_frames() {
  // @@protoc_insertion_point(field_add:gani_building.gani_information.ani_frames)
  return ani_frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gani_building_ani_frame >*
gani_building_gani_information::mutable_ani_frames() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.gani_information.ani_frames)
  return &ani_frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gani_building_ani_frame >&
gani_building_gani_information::ani_frames() const {
  // @@protoc_insertion_point(field_list:gani_building.gani_information.ani_frames)
  return ani_frames_;
}

// repeated .gani_building.property properties = 3;
inline int gani_building_gani_information::properties_size() const {
  return properties_.size();
}
inline void gani_building_gani_information::clear_properties() {
  properties_.Clear();
}
inline ::gani_building_property gani_building_gani_information::properties(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.properties)
  return static_cast< ::gani_building_property >(properties_.Get(index));
}
inline void gani_building_gani_information::set_properties(int index, ::gani_building_property value) {
  assert(::gani_building_property_IsValid(value));
  properties_.Set(index, value);
  // @@protoc_insertion_point(field_set:gani_building.gani_information.properties)
}
inline void gani_building_gani_information::add_properties(::gani_building_property value) {
  assert(::gani_building_property_IsValid(value));
  properties_.Add(value);
  // @@protoc_insertion_point(field_add:gani_building.gani_information.properties)
}
inline const ::google::protobuf::RepeatedField<int>&
gani_building_gani_information::properties() const {
  // @@protoc_insertion_point(field_list:gani_building.gani_information.properties)
  return properties_;
}
inline ::google::protobuf::RepeatedField<int>*
gani_building_gani_information::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.gani_information.properties)
  return &properties_;
}

// repeated .gani_building.attached_sprite attached_sprites = 4;
inline int gani_building_gani_information::attached_sprites_size() const {
  return attached_sprites_.size();
}
inline void gani_building_gani_information::clear_attached_sprites() {
  attached_sprites_.Clear();
}
inline const ::gani_building_attached_sprite& gani_building_gani_information::attached_sprites(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.attached_sprites)
  return attached_sprites_.Get(index);
}
inline ::gani_building_attached_sprite* gani_building_gani_information::mutable_attached_sprites(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.attached_sprites)
  return attached_sprites_.Mutable(index);
}
inline ::gani_building_attached_sprite* gani_building_gani_information::add_attached_sprites() {
  // @@protoc_insertion_point(field_add:gani_building.gani_information.attached_sprites)
  return attached_sprites_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gani_building_attached_sprite >*
gani_building_gani_information::mutable_attached_sprites() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.gani_information.attached_sprites)
  return &attached_sprites_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gani_building_attached_sprite >&
gani_building_gani_information::attached_sprites() const {
  // @@protoc_insertion_point(field_list:gani_building.gani_information.attached_sprites)
  return attached_sprites_;
}

// repeated string default_attributes = 5;
inline int gani_building_gani_information::default_attributes_size() const {
  return default_attributes_.size();
}
inline void gani_building_gani_information::clear_default_attributes() {
  default_attributes_.Clear();
}
inline const ::std::string& gani_building_gani_information::default_attributes(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.default_attributes)
  return default_attributes_.Get(index);
}
inline ::std::string* gani_building_gani_information::mutable_default_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.default_attributes)
  return default_attributes_.Mutable(index);
}
inline void gani_building_gani_information::set_default_attributes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gani_building.gani_information.default_attributes)
  default_attributes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gani_building_gani_information::set_default_attributes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:gani_building.gani_information.default_attributes)
  default_attributes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gani_building_gani_information::set_default_attributes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_attributes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gani_building.gani_information.default_attributes)
}
inline void gani_building_gani_information::set_default_attributes(int index, const char* value, size_t size) {
  default_attributes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gani_building.gani_information.default_attributes)
}
inline ::std::string* gani_building_gani_information::add_default_attributes() {
  // @@protoc_insertion_point(field_add_mutable:gani_building.gani_information.default_attributes)
  return default_attributes_.Add();
}
inline void gani_building_gani_information::add_default_attributes(const ::std::string& value) {
  default_attributes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gani_building.gani_information.default_attributes)
}
#if LANG_CXX11
inline void gani_building_gani_information::add_default_attributes(::std::string&& value) {
  default_attributes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:gani_building.gani_information.default_attributes)
}
#endif
inline void gani_building_gani_information::add_default_attributes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_attributes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gani_building.gani_information.default_attributes)
}
inline void gani_building_gani_information::add_default_attributes(const char* value, size_t size) {
  default_attributes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gani_building.gani_information.default_attributes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gani_building_gani_information::default_attributes() const {
  // @@protoc_insertion_point(field_list:gani_building.gani_information.default_attributes)
  return default_attributes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gani_building_gani_information::mutable_default_attributes() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.gani_information.default_attributes)
  return &default_attributes_;
}

// repeated string default_parameters = 6;
inline int gani_building_gani_information::default_parameters_size() const {
  return default_parameters_.size();
}
inline void gani_building_gani_information::clear_default_parameters() {
  default_parameters_.Clear();
}
inline const ::std::string& gani_building_gani_information::default_parameters(int index) const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.default_parameters)
  return default_parameters_.Get(index);
}
inline ::std::string* gani_building_gani_information::mutable_default_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.default_parameters)
  return default_parameters_.Mutable(index);
}
inline void gani_building_gani_information::set_default_parameters(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gani_building.gani_information.default_parameters)
  default_parameters_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gani_building_gani_information::set_default_parameters(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:gani_building.gani_information.default_parameters)
  default_parameters_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gani_building_gani_information::set_default_parameters(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_parameters_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gani_building.gani_information.default_parameters)
}
inline void gani_building_gani_information::set_default_parameters(int index, const char* value, size_t size) {
  default_parameters_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gani_building.gani_information.default_parameters)
}
inline ::std::string* gani_building_gani_information::add_default_parameters() {
  // @@protoc_insertion_point(field_add_mutable:gani_building.gani_information.default_parameters)
  return default_parameters_.Add();
}
inline void gani_building_gani_information::add_default_parameters(const ::std::string& value) {
  default_parameters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gani_building.gani_information.default_parameters)
}
#if LANG_CXX11
inline void gani_building_gani_information::add_default_parameters(::std::string&& value) {
  default_parameters_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:gani_building.gani_information.default_parameters)
}
#endif
inline void gani_building_gani_information::add_default_parameters(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_parameters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gani_building.gani_information.default_parameters)
}
inline void gani_building_gani_information::add_default_parameters(const char* value, size_t size) {
  default_parameters_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gani_building.gani_information.default_parameters)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gani_building_gani_information::default_parameters() const {
  // @@protoc_insertion_point(field_list:gani_building.gani_information.default_parameters)
  return default_parameters_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gani_building_gani_information::mutable_default_parameters() {
  // @@protoc_insertion_point(field_mutable_list:gani_building.gani_information.default_parameters)
  return &default_parameters_;
}

// optional string default_head = 7;
inline bool gani_building_gani_information::has_default_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gani_building_gani_information::set_has_default_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gani_building_gani_information::clear_has_default_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gani_building_gani_information::clear_default_head() {
  default_head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_default_head();
}
inline const ::std::string& gani_building_gani_information::default_head() const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.default_head)
  return default_head_.GetNoArena();
}
inline void gani_building_gani_information::set_default_head(const ::std::string& value) {
  set_has_default_head();
  default_head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gani_building.gani_information.default_head)
}
#if LANG_CXX11
inline void gani_building_gani_information::set_default_head(::std::string&& value) {
  set_has_default_head();
  default_head_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gani_building.gani_information.default_head)
}
#endif
inline void gani_building_gani_information::set_default_head(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_default_head();
  default_head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gani_building.gani_information.default_head)
}
inline void gani_building_gani_information::set_default_head(const char* value, size_t size) {
  set_has_default_head();
  default_head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gani_building.gani_information.default_head)
}
inline ::std::string* gani_building_gani_information::mutable_default_head() {
  set_has_default_head();
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.default_head)
  return default_head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gani_building_gani_information::release_default_head() {
  // @@protoc_insertion_point(field_release:gani_building.gani_information.default_head)
  clear_has_default_head();
  return default_head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gani_building_gani_information::set_allocated_default_head(::std::string* default_head) {
  if (default_head != NULL) {
    set_has_default_head();
  } else {
    clear_has_default_head();
  }
  default_head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_head);
  // @@protoc_insertion_point(field_set_allocated:gani_building.gani_information.default_head)
}

// optional string default_body = 8;
inline bool gani_building_gani_information::has_default_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gani_building_gani_information::set_has_default_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gani_building_gani_information::clear_has_default_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gani_building_gani_information::clear_default_body() {
  default_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_default_body();
}
inline const ::std::string& gani_building_gani_information::default_body() const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.default_body)
  return default_body_.GetNoArena();
}
inline void gani_building_gani_information::set_default_body(const ::std::string& value) {
  set_has_default_body();
  default_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gani_building.gani_information.default_body)
}
#if LANG_CXX11
inline void gani_building_gani_information::set_default_body(::std::string&& value) {
  set_has_default_body();
  default_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gani_building.gani_information.default_body)
}
#endif
inline void gani_building_gani_information::set_default_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_default_body();
  default_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gani_building.gani_information.default_body)
}
inline void gani_building_gani_information::set_default_body(const char* value, size_t size) {
  set_has_default_body();
  default_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gani_building.gani_information.default_body)
}
inline ::std::string* gani_building_gani_information::mutable_default_body() {
  set_has_default_body();
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.default_body)
  return default_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gani_building_gani_information::release_default_body() {
  // @@protoc_insertion_point(field_release:gani_building.gani_information.default_body)
  clear_has_default_body();
  return default_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gani_building_gani_information::set_allocated_default_body(::std::string* default_body) {
  if (default_body != NULL) {
    set_has_default_body();
  } else {
    clear_has_default_body();
  }
  default_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_body);
  // @@protoc_insertion_point(field_set_allocated:gani_building.gani_information.default_body)
}

// optional string next_gani = 9;
inline bool gani_building_gani_information::has_next_gani() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gani_building_gani_information::set_has_next_gani() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gani_building_gani_information::clear_has_next_gani() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gani_building_gani_information::clear_next_gani() {
  next_gani_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_next_gani();
}
inline const ::std::string& gani_building_gani_information::next_gani() const {
  // @@protoc_insertion_point(field_get:gani_building.gani_information.next_gani)
  return next_gani_.GetNoArena();
}
inline void gani_building_gani_information::set_next_gani(const ::std::string& value) {
  set_has_next_gani();
  next_gani_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gani_building.gani_information.next_gani)
}
#if LANG_CXX11
inline void gani_building_gani_information::set_next_gani(::std::string&& value) {
  set_has_next_gani();
  next_gani_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gani_building.gani_information.next_gani)
}
#endif
inline void gani_building_gani_information::set_next_gani(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_next_gani();
  next_gani_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gani_building.gani_information.next_gani)
}
inline void gani_building_gani_information::set_next_gani(const char* value, size_t size) {
  set_has_next_gani();
  next_gani_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gani_building.gani_information.next_gani)
}
inline ::std::string* gani_building_gani_information::mutable_next_gani() {
  set_has_next_gani();
  // @@protoc_insertion_point(field_mutable:gani_building.gani_information.next_gani)
  return next_gani_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gani_building_gani_information::release_next_gani() {
  // @@protoc_insertion_point(field_release:gani_building.gani_information.next_gani)
  clear_has_next_gani();
  return next_gani_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gani_building_gani_information::set_allocated_next_gani(::std::string* next_gani) {
  if (next_gani != NULL) {
    set_has_next_gani();
  } else {
    clear_has_next_gani();
  }
  next_gani_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_gani);
  // @@protoc_insertion_point(field_set_allocated:gani_building.gani_information.next_gani)
}

// -------------------------------------------------------------------

// gani_building

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gani_building_property> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gani_building_property>() {
  return ::gani_building_property_descriptor();
}
template <> struct is_proto_enum< ::gani_building_default_image_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gani_building_default_image_type>() {
  return ::gani_building_default_image_type_descriptor();
}
template <> struct is_proto_enum< ::gani_building_directions> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gani_building_directions>() {
  return ::gani_building_directions_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gani_5fbuilding_2eproto__INCLUDED
